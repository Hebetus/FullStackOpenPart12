services:
  app:
    image: todo-frontend-dev
    build:
      context: ./todo-frontend
      dockerfile: dev.Dockerfile
    volumes:
      - ./todo-frontend/src:/usr/src/app/src
      - ./todo-frontend/public:/usr/src/app/public
    command: ["npm", "start"]
    environment:
      CI: true
      CHOKIDAR_USEPOLLING: true
      WATCHPACK_POLLING: true
      REACT_APP_BACKEND_URL: http://localhost:8080/api/
      PORT: 3000
    container_name: todo-frontend-dev
  server:
    image: todo-backend-dev
    build:
      context: ./todo-backend
      dockerfile: dev.Dockerfile
    volumes:
      - ./todo-backend:/usr/src/app
    command: ["npm", "run", "dev"]
    environment:
      REDIS_URL: redis://redis:6379
      MONGO_URL: mongodb://the_username:the_password@mongo:27017/the_database
      DEBUG: todo-backend:* nodemon ./bin/www
    container_name: todo-backend-dev
    depends_on:
      - redis
      - mongo
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - mongo_data:/data/db
  redis:
    image: redis:6.2
    container_name: redis
    restart: always
    hostname: redis
    ports:
      - 3002:6379
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - ./todo-backend/redis_data:/data
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app
      - server

volumes:
  mongo_data:
  cache:
    driver: local